[code]
/*

------ [SX_10] - RX LoRa from all Nodes with ACK --------
Explanation: This example shows how to configure the Concentrator Node
module in LoRa mode and then receive packets from any node. When a
packet is received, an ACK is sent back to the sender. This
code works as a network sniffer because independently the packet is
sent to, this module gets it and shows it.
Copyright (C) 2022 Cintelam Campos Inteligentes de America C. Ltda.
http://www.cintelam.com
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details.
Author 1: Angel Guevara Chinchero
Author 2: Héctor Chinchero Villacís
Author 3: Alfonso Marchan
Date: 2021-02-21
*/
// Put your libraries here (#include ...)
#include <WaspSX1272.h>

// status variable
int8_t e;
unsigned long time = 0;

void setup()
{
// init USB port
USB.ON();
USB.println(F("Semtech SX1272 module RX in LoRa, complete example"));

// init SX1272 module
sx1272.ON();

// select frequency channel
e = sx1272.setChannel(CH_14_868);
USB.print(F("Setting Channel CH_14_868.\t state "));
USB.println(e);

// select implicit or explicit header mode
e = sx1272.setHeaderON();
USB.print(F("Setting Header ON.\t\t state "));
USB.println(e);

// Select mode: from 1 to 10
e = sx1272.setMode(10);
USB.print(F("Setting Mode '10'.\t\t state "));
USB.println(e);

// Select CRC on or off
e = sx1272.setCRC_ON();
USB.print(F("Setting CRC ON.\t\t\t state "));
USB.println(e);

// Select output power (Max, High or Low)
e = sx1272.setPower('H');
USB.print(F("Setting Power to 'H'.\t\t state "));
USB.println(e);

// select the node address value: from 2 to 255
e = sx1272.setNodeAddress(1);
USB.print(F("Setting Node Address to '1'.\t state "));
USB.println(e);
USB.println();

delay(1000);

USB.println(F("--------------------------------------------------"));
USB.println(F("Receiving from All Nodes (with ACK response):"));
USB.println(F("--------------------------------------------------"));
}

void loop()
{
// Receive from all Nodes of WSN
e = sx1272.receiveAll(10000);
// check RX status
if( e == 0 ) {
// if packet received then send ACK
e = sx1272.setACK();

if( e == 0 )  {
  e = sx1272.sendWithTimeout();
  USB.print(F("ACK sent, state "));
  USB.println(e, DEC);
  //show information in serial port of Concentrator Node
  sx1272.showReceivedPacket();
}else {
  //print error message of ACK
  USB.println(F("There has been any error while setting ACK"));
}
}else {
USB.println(F("There has been any error while receiving packet"));
}

}

[/code]

—

